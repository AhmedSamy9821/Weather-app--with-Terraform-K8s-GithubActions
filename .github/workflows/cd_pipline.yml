name: CD pipline
on:
    workflow_dispatch:
      

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: eu-north-1

    - name: join the eks cluster
      run: aws eks --region eu-north-1 update-kubeconfig --name weather-cluster-dev

    - name: install nginx ingress controller and EBS CSI Driver
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.12.0-beta.0/deploy/static/provider/cloud/deploy.yaml
        kubectl wait --namespace ingress-nginx \
        --for=condition=ready pod \
        --selector=app.kubernetes.io/component=controller \
        --timeout=120s
        kubectl get pods --namespace=ingress-nginx
        kubectl apply -f ./Kubernetes/pre_req/ebs_csi_driver_sa.yml
        kubectl apply -k "github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/?ref=release-1.14"



    - name: Create mysql-secret
      run: kubectl create secret generic mysql-secret  --from-literal=root-password='${{secrets.MYSQL_ROOT_PASSWORD}}' --from-literal=auth-password='${{secrets.MYSQL_AUTH_PASSWORD}}' --from-literal=secret-key='${{secrets.AUTH_SECRET_KEY}}'
      continue-on-error: true

    - name: deploy mysql
      run: |
        kubectl apply -f ./Kubernetes/auth/mysql/mysql_sc.yml
        kubectl apply -f ./Kubernetes/auth/mysql/mysql_pvc.yml
        kubectl apply -f ./Kubernetes/auth/mysql/mysql_deployment.yml
        kubectl apply -f ./Kubernetes/auth/mysql/mysql_service.yml 
        kubectl get pods 
        kubectl get svc
#be sure that pods and services up

   # - name: Run the init job to create the auth service user
    #  run: |
        
    