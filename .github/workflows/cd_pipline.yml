name: CD pipline
on:
    workflow_dispatch:
      

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: set up AWS credentials
      run: |
        sudo echo "[Terraform]" >> ~/.aws/credentials
        sudo echo "aws_access_key_id = ${{secrets.AWS_ACCESS_KEY}}" >> ~/.aws/credentials
        sudo echo "aws_secret_access_key = ${{secrets.AWS_SECRET_ACCESS_KEY}}" >> ~/.aws/credentials 
        aws configure [--profile Terraform]

    - name: join the eks cluster
     # env:
        #    AWS_ACCESS_KEY_ID: 
         #   AWS_SECRET_ACCESS_KEY: 
      run: aws eks --region eu-north-1 update-kubeconfig --name weather-cluster-dev

    - name: install nginx ingress controller
     # env:
        #    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
          #  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.12.0-beta.0/deploy/static/provider/cloud/deploy.yaml
        kubectl wait --namespace ingress-nginx \
        --for=condition=ready pod \
        --selector=app.kubernetes.io/component=controller \
        --timeout=120s
        kubectl get pods --namespace=ingress-nginx

    - name: Create secret 
     # env:
        #    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
          #  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      run: kubectl create secret generic mysql-secret  --from-literal=root-password='${{secrets.MYSQL_ROOT_PASSWORD}}' --from-literal=auth-password='${{secrets.MYSQL_AUTH_PASSWORD}}' --from-literal=secret-key='${{secrets.AUTH_SECRET_KEY}}'